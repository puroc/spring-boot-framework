<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emrubik.springboot.dao.mapper.UserMapper">

    <resultMap id="UserResultMap" type="com.emrubik.springboot.domain.po.extension.UserExt">
        <id column="userId" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="orgId" jdbcType="INTEGER" property="orgId"/>
        <collection property="roles" ofType="com.emrubik.springboot.domain.po.extension.RoleExt">
            <id column="roleId" jdbcType="INTEGER" property="id"/>
            <result column="roleBindOrgId" jdbcType="VARCHAR" property="orgId"/>
            <collection property="permissions" ofType="com.emrubik.springboot.domain.po.Permission">
                <result column="permissionCode" jdbcType="VARCHAR" property="code"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getUserInfo" resultMap="UserResultMap">
        SELECT
            user.id AS userid,
            user.username AS username,
            user.PASSWORD AS PASSWORD,
            user.NAME AS NAME,
            user.phone AS phone,
            user.email AS email,
            user.org_id AS orgId,
            user_role_bind.role_id AS roleId,
            user_role_bind.org_id AS roleBindOrgId,
            permission.code AS permissionCode
        FROM
            user LEFT OUTER JOIN user_role_bind ON user_role_bind.user_id = user.id
            LEFT OUTER JOIN role_permission_bind ON role_permission_bind.role_id = user_role_bind.role_id
            LEFT OUTER JOIN permission ON permission.id = role_permission_bind.permission_id
        WHERE
            user.id =#{userId}
    </select>

    <select id="getUserListByOrgId" resultMap="UserResultMap">
        SELECT
            `user`.id AS userid,
            `user`.username AS username,
            `user`.`password` AS `password`,
            `user`.`name` AS `name`,
            `user`.phone AS phone,
            `user`.email AS email,
            `user`.org_id AS orgId,
            org.name AS userOrgName
        FROM user
        INNER JOIN org ON `user`.org_id=org.id
        <where>
            ${ew.sqlSegment}
        </where>
        ORDER BY `user`.TIMESTAMP DESC
    </select>

</mapper>
